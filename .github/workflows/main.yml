# This is a basic workflow to help you get started with Actions
name: build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
      - '*.*.*' 
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-18.04
    outputs:
      is_release_build: ${{ env.RELEASE_BUILD == '1' }}
    steps:
      - name: Installer list
        run: |
          tee pylon-installer.txt <<EOF
          pylon_6.1.0.19674_x86_setup.tar.gz
          pylon_6.1.1.19861_x86_64_setup.tar.gz
          pylon_6.1.3.20159_armhf_setup.tar.gz
          pylon_6.1.3.20159_aarch64_setup.tar.gz
          pylon-6.1.2.19990.zip
          EOF

      - uses: actions/cache@v2
        id: cache
        with:
          path: pylon-installer
          key: pylon-installer-${{ hashFiles('pylon-installer.txt') }}

      - name: Fetch installers
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          PYLON_DOWNLOAD_URL_BASE: ${{ secrets.PYLON_DOWNLOAD_URL_BASE }}
        run: |
          mkdir pylon-installer && cd pylon-installer
          while read line; do
            echo "download $line"
            curl -sSfL -O "${PYLON_DOWNLOAD_URL_BASE}${line}"
          done <../pylon-installer.txt

      - uses: actions/upload-artifact@v2
        with:
          name: pylon-installer
          path: pylon-installer
          
      - name: Check for release build
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Build release for $GITHUB_REF"
          echo "RELEASE_BUILD=1" >> $GITHUB_ENV


  build-linux:
    needs: prepare
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        a: [cp34m, cp35m, cp36m, cp37m, cp38, cp39]
        p: [linux_x86_64, linux_i686, linux_aarch64]
    env:
      P: ${{ matrix.p }}
      A: ${{ matrix.a }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: pylon-installer
          path: pylon-installer

      - name: Build with docker
        run: |
          pwd
          ls
          ls pylon-installer
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
          ./scripts/build/build-arch.sh --platform-tag $P --abi-tag $A --pylon-dir ./pylon-installer $ARGS
          
      - uses: actions/upload-artifact@v2
        with:
          name: wheels-linux-${{ matrix.p }}-${{ matrix.a }}
          path: dist/*
          
      - name: Upload Release Asset
        if: needs.prepare.outputs.is_release_build
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref }}
          
  build-macos:
    needs: prepare
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        a: [cp36, cp37, cp38, cp39]
    env:
      P: macosx-10.15-intel
      A: ${{ matrix.a }}
    steps:
      - uses: actions/checkout@v2
        
      - uses: actions/download-artifact@v2
        with:
          name: pylon-installer
          path: pylon-installer


      - name: Build and test
        run: |
          eval "$(pyenv init -)"
          export PATH=$HOME/.pyenv/bin:$PATH
          case $A in
            cp36)
              PYENV_VERSION="3.6"
              curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg"
              ;;
            cp37)
              PYENV_VERSION="3.7"
              curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.7.9/python-3.7.9-macosx10.9.pkg"
              ;;
            cp38)
              PYENV_VERSION="3.8"
              curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.8.7/python-3.8.7-macosx10.9.pkg"
              ;;
            cp39)
              PYENV_VERSION="3.9"
              curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.9.1/python-3.9.1-macosx10.9.pkg"
              ;;
            *)
              echo "Invalid python version $A"
              exit -1
              ;;
          esac
          sudo installer -pkg python.pkg -target /
          cd pylon-installer
          unzip pylon-*.zip
          hdiutil attach pylon-*.dmg
          sudo installer -pkg /Volumes/pylon\ *\ Camera\ Software\ Suite/pylon-*.pkg  -target /
          hdiutil detach /Volumes/pylon\ *\ Camera\ Software\ Suite
          brew install swig
          cd ${GITHUB_WORKSPACE}
          pip3 install numpy
          pip3 install wheel
          # pylon 6.1 is linked against 10.14
          export MACOSX_DEPLOYMENT_TARGET=10.14
          python3 setup.py test
          python3 setup.py bdist_wheel
          
      - uses: actions/upload-artifact@v2
        with:
          name: wheels-macos-${{ matrix.a }}
          path: dist/*
     
      - name: Upload Release Asset
        if: needs.prepare.outputs.is_release_build
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref }}
      

     
